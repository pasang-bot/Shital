#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int id;
    char title[50];
    char author[50];
    int quantity;
} Book;

FILE *fptr;

// Function declarations
void menu();
void addBook();
void viewBooks();
void issueBook();
void returnBook();
void editBook();
void searchBook();
void removeBook();

int main() {
    menu();
    return 0;
}

void menu() {
    int choice;
    while (1) {
        printf("\n--- Library Management System ---\n");
        printf("1. Add Book\n");
        printf("2. View Books\n");
        printf("3. Issue Book\n");
        printf("4. Return Book\n");
        printf("5. Edit Book\n"); // New option
        printf("6. Search Book\n");
        printf("7. Remove Book\n");
        printf("8. Exit\n"); // Exit moved to 8
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // consume newline

        switch(choice) {
            case 1: addBook(); break;
            case 2: viewBooks(); break;
            case 3: issueBook(); break;
            case 4: returnBook(); break;
            case 5: editBook(); break;
            case 6: searchBook(); break;
            case 7: removeBook(); break;
            case 8: printf("Exiting...\n"); exit(0);
            default: printf("Invalid choice. Try again.\n");
        }
    }
}

void addBook() {
    Book book, tempBook;
    int idExists = 0;
    char line[200];

    printf("Enter Book ID: ");
    scanf("%d", &book.id);
    getchar();

    fptr = fopen("library.txt", "r");
    if (fptr != NULL) {
        while (fgets(line, sizeof(line), fptr)) {
            sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &tempBook.id, tempBook.title, tempBook.author, &tempBook.quantity);
            if (tempBook.id == book.id) {
                idExists = 1;
                break;
            }
        }
        fclose(fptr);
    }

    if (idExists) {
        printf("Book ID already exists. Please use a unique ID.\n");
        return;
    }

    printf("Enter Book Title: ");
    fgets(book.title, sizeof(book.title), stdin);
    book.title[strcspn(book.title, "\n")] = 0;

    printf("Enter Book Author: ");
    fgets(book.author, sizeof(book.author), stdin);
    book.author[strcspn(book.author, "\n")] = 0;

    printf("Enter Quantity: ");
    scanf("%d", &book.quantity);

    fptr = fopen("library.txt", "a");
    if (fptr == NULL) {
        printf("Error opening file.\n");
        return;
    }

    fprintf(fptr, "%d\t%s\t%s\t%d\n", book.id, book.title, book.author, book.quantity);
    fclose(fptr);
    printf("Book added successfully!\n");
}

void viewBooks() {
    Book book;
    char line[200];
    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books found.\n");
        return;
    }

    printf("\n%-10s %-30s %-20s %-10s\n", "Book ID", "Title", "Author", "Quantity");
    printf("---------------------------------------------------------------\n");

    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);
        printf("%-10d %-30s %-20s %-10d\n", book.id, book.title, book.author, book.quantity);
    }

    fclose(fptr);
}

void issueBook() {
    int id, found = 0;
    Book book;
    char line[200];
    FILE *temp;

    printf("Enter Book ID to issue: ");
    scanf("%d", &id);

    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books available.\n");
        return;
    }

    temp = fopen("temp.txt", "w");
    if (temp == NULL) {
        printf("Error opening temp file.\n");
        fclose(fptr);
        return;
    }

    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);
        if (book.id == id) {
            found = 1;
            if (book.quantity > 0) {
                book.quantity--;
                printf("Book issued successfully.\n");
            } else {
                printf("Book not available.\n");
            }
        }
        fprintf(temp, "%d\t%s\t%s\t%d\n", book.id, book.title, book.author, book.quantity);
    }

    fclose(fptr);
    fclose(temp);
    remove("library.txt");
    rename("temp.txt", "library.txt");

    if (!found)
        printf("Book not found.\n");
}

void returnBook() {
    int id, found = 0;
    Book book;
    char line[200];
    FILE *temp;

    printf("Enter Book ID to return: ");
    scanf("%d", &id);

    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books found.\n");
        return;
    }

    temp = fopen("temp.txt", "w");
    if (temp == NULL) {
        printf("Error opening temp file.\n");
        fclose(fptr);
        return;
    }

    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);
        if (book.id == id) {
            found = 1;
            book.quantity++;
            printf("Book returned successfully.\n");
        }
        fprintf(temp, "%d\t%s\t%s\t%d\n", book.id, book.title, book.author, book.quantity);
    }

    fclose(fptr);
    fclose(temp);
    remove("library.txt");
    rename("temp.txt", "library.txt");

    if (!found)
        printf("Book not found.\n");
}

void editBook() {
    int id, found = 0;
    Book book;
    char line[200];
    FILE *temp;

    printf("Enter Book ID to edit: ");
    scanf("%d", &id);
    getchar(); // consume newline

    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books found.\n");
        return;
    }

    temp = fopen("temp.txt", "w");
    if (temp == NULL) {
        printf("Error opening temporary file.\n");
        fclose(fptr);
        return;
    }

    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);

        if (book.id == id) {
            found = 1;
            printf("Editing Book ID %d:\n", id);

            printf("Current Title: %s\n", book.title);
            printf("Enter New Title (leave blank to keep current): ");
            char newTitle[50];
            fgets(newTitle, sizeof(newTitle), stdin);
            newTitle[strcspn(newTitle, "\n")] = 0;
            if (strlen(newTitle) > 0)
                strcpy(book.title, newTitle);

            printf("Current Author: %s\n", book.author);
            printf("Enter New Author (leave blank to keep current): ");
            char newAuthor[50];
            fgets(newAuthor, sizeof(newAuthor), stdin);
            newAuthor[strcspn(newAuthor, "\n")] = 0;
            if (strlen(newAuthor) > 0)
                strcpy(book.author, newAuthor);

            printf("Current Quantity: %d\n", book.quantity);
            printf("Enter New Quantity (negative to keep current): ");
            int newQty;
            scanf("%d", &newQty);
            getchar();
            if (newQty >= 0)
                book.quantity = newQty;

            printf("Book updated successfully.\n");
        }

        fprintf(temp, "%d\t%s\t%s\t%d\n", book.id, book.title, book.author, book.quantity);
    }

    fclose(fptr);
    fclose(temp);
    remove("library.txt");
    rename("temp.txt", "library.txt");

    if (!found)
        printf("Book with ID %d not found.\n", id);
}

void searchBook() {
    int id, found = 0;
    Book book;
    char line[200];

    printf("Enter Book ID to search: ");
    scanf("%d", &id);

    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books found.\n");
        return;
    }

    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);
        if (book.id == id) {
            found = 1;
            printf("\nBook Found:\n");
            printf("ID: %d\nTitle: %s\nAuthor: %s\nQuantity: %d\n", book.id, book.title, book.author, book.quantity);
            break;
        }
    }

    fclose(fptr);

    if (!found)
        printf("Book not found.\n");
}

void removeBook() {
    int id, found = 0;
    Book book;
    char line[200];
    FILE *temp;
    printf("Enter Book ID to remove: ");
    scanf("%d", &id);
    fptr = fopen("library.txt", "r");
    if (fptr == NULL) {
        printf("No books found.\n");
        return;
    }
    temp = fopen("temp.txt", "w");
    if (temp == NULL) {
        printf("Error opening temp file.\n");
        fclose(fptr);
        return;
    }
    while (fgets(line, sizeof(line), fptr)) {
        sscanf(line, "%d\t%[^\t]\t%[^\t]\t%d", &book.id, book.title, book.author, &book.quantity);
        if (book.id == id) {
            found = 1;
            printf("Book with ID %d removed successfully.\n", id);
            continue;
        }
        fprintf(temp, "%d\t%s\t%s\t%d\n", book.id, book.title, book.author, book.quantity);
    }
    fclose(fptr);
    fclose(temp);
    remove("library.txt");
    rename("temp.txt", "library.txt");

    if (!found)
        printf("Book not found.\n");
}
